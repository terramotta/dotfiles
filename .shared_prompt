#!/bin/bash

# Função para status do repositório Git
prompt_git() {
    local git_status=''
    local branchName=''

    # Verificar se o diretório atual está em um repositório Git
    if git rev-parse --is-inside-work-tree &>/dev/null; then
        # Obter resumo do status
        local gitSummary=$(git status --porcelain)

        # Verificar alterações não confirmadas, alterações não rastreadas e arquivos stash
        [[ -n $(echo "$gitSummary" | grep '^M') ]] && git_status+='+' # Alterações no índice
        [[ -n $(echo "$gitSummary" | grep '^ M') ]] && git_status+='!' # Alterações não estagiadas
        [[ -n $(echo "$gitSummary" | grep '^\?\?') ]] && git_status+='?' # Arquivos não rastreados
        [[ $(git rev-parse --verify refs/stash &>/dev/null; echo "${?}") == '0' ]] && git_status+='$' # Arquivos stash

        # Obter o nome do branch ou SHA curto do último commit
        branchName="$(git symbolic-ref --quiet --short HEAD 2>/dev/null || git rev-parse --short HEAD 2>/dev/null || echo '(unknown)')"

        [ -n "${git_status}" ] && git_status=" [${git_status}]"

        printf "%b on %b%s%s" "${white}" "${blue}" "${branchName}" "${git_status}"
    fi
}

export VIRTUAL_ENV_DISABLE_PROMPT=1
prompt_venv() {
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Extrair o nome do diretório do ambiente virtual
        venv_name=$(basename "$VIRTUAL_ENV")
        printf "\n%b(%s)\n" "${steel_blue}" "${venv_name}"
    fi
}

# Usar tput para cores e formatação
tput sgr0 # Resetar cores
bold=$(tput bold)
reset=$(tput sgr0)
blue=$(tput setaf 33) # Alterado para um valor padrão, ajuste conforme necessário
steel_blue=$(tput setaf 67)
green=$(tput setaf 2) # Alterado para um valor padrão, ajuste conforme necessário
orange=$(tput setaf 208)
red=$(tput setaf 1)
white=$(tput setaf 7)
yellow=$(tput setaf 3) # Alterado para um valor padrão, ajuste conforme necessário

# Destacar o nome do usuário se for root
if [[ "${USER}" == "root" ]]; then
    userStyle="${red}"
else
    userStyle="${orange}"
fi

# Destacar o hostname se conectado via SSH
if [[ "${SSH_TTY}" ]]; then
    hostStyle="${bold}${red}"
else
    hostStyle="${yellow}"
fi
